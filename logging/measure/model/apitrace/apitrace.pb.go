// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: model/apitrace/apitrace.proto

// Package apitrace provides data model for binary API trace informations.

package apitrace

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Trace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TracedEntries   []*Trace_Entry      `protobuf:"bytes,1,rep,name=traced_entries,json=tracedEntries,proto3" json:"traced_entries,omitempty"`
	EntryStats      []*Trace_EntryStats `protobuf:"bytes,2,rep,name=entry_stats,json=entryStats,proto3" json:"entry_stats,omitempty"`
	OverallDuration uint64              `protobuf:"varint,3,opt,name=overall_duration,json=overallDuration,proto3" json:"overall_duration,omitempty"` // Overall duration of all measured entries in nanoseconds
}

func (x *Trace) Reset() {
	*x = Trace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_apitrace_apitrace_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Trace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trace) ProtoMessage() {}

func (x *Trace) ProtoReflect() protoreflect.Message {
	mi := &file_model_apitrace_apitrace_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trace.ProtoReflect.Descriptor instead.
func (*Trace) Descriptor() ([]byte, []int) {
	return file_model_apitrace_apitrace_proto_rawDescGZIP(), []int{0}
}

func (x *Trace) GetTracedEntries() []*Trace_Entry {
	if x != nil {
		return x.TracedEntries
	}
	return nil
}

func (x *Trace) GetEntryStats() []*Trace_EntryStats {
	if x != nil {
		return x.EntryStats
	}
	return nil
}

func (x *Trace) GetOverallDuration() uint64 {
	if x != nil {
		return x.OverallDuration
	}
	return 0
}

type Trace_Entry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index     uint64 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`                   // Entry index. Each message is indexed in the order it is logged.
	MsgName   string `protobuf:"bytes,2,opt,name=msg_name,json=msgName,proto3" json:"msg_name,omitempty"` // Message name (or any other descriptive string)
	StartTime uint64 `protobuf:"varint,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	Duration  uint64 `protobuf:"varint,4,opt,name=duration,proto3" json:"duration,omitempty"` // Duration of message call in nanoseconds
}

func (x *Trace_Entry) Reset() {
	*x = Trace_Entry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_apitrace_apitrace_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Trace_Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trace_Entry) ProtoMessage() {}

func (x *Trace_Entry) ProtoReflect() protoreflect.Message {
	mi := &file_model_apitrace_apitrace_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trace_Entry.ProtoReflect.Descriptor instead.
func (*Trace_Entry) Descriptor() ([]byte, []int) {
	return file_model_apitrace_apitrace_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Trace_Entry) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Trace_Entry) GetMsgName() string {
	if x != nil {
		return x.MsgName
	}
	return ""
}

func (x *Trace_Entry) GetStartTime() uint64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *Trace_Entry) GetDuration() uint64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

type Trace_EntryStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgName         string `protobuf:"bytes,1,opt,name=msg_name,json=msgName,proto3" json:"msg_name,omitempty"`                          // Message name, unique in this list.
	AverageDuration uint64 `protobuf:"varint,2,opt,name=average_duration,json=averageDuration,proto3" json:"average_duration,omitempty"` // Average time duration per message in nanoseconds
}

func (x *Trace_EntryStats) Reset() {
	*x = Trace_EntryStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_apitrace_apitrace_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Trace_EntryStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trace_EntryStats) ProtoMessage() {}

func (x *Trace_EntryStats) ProtoReflect() protoreflect.Message {
	mi := &file_model_apitrace_apitrace_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trace_EntryStats.ProtoReflect.Descriptor instead.
func (*Trace_EntryStats) Descriptor() ([]byte, []int) {
	return file_model_apitrace_apitrace_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Trace_EntryStats) GetMsgName() string {
	if x != nil {
		return x.MsgName
	}
	return ""
}

func (x *Trace_EntryStats) GetAverageDuration() uint64 {
	if x != nil {
		return x.AverageDuration
	}
	return 0
}

var File_model_apitrace_apitrace_proto protoreflect.FileDescriptor

var file_model_apitrace_apitrace_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x61, 0x70, 0x69, 0x74, 0x72, 0x61, 0x63, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x74, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x08, 0x61, 0x70, 0x69, 0x74, 0x72, 0x61, 0x63, 0x65, 0x22, 0xf6, 0x02, 0x0a, 0x05, 0x54, 0x72,
	0x61, 0x63, 0x65, 0x12, 0x3c, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x64, 0x5f, 0x65, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70,
	0x69, 0x74, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x63, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x12, 0x3b, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x74, 0x72, 0x61, 0x63,
	0x65, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x29,
	0x0a, 0x10, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x6c,
	0x6c, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x73, 0x0a, 0x05, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x52,
	0x0a, 0x0a, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x19, 0x0a, 0x08,
	0x6d, 0x73, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x73, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x76, 0x65, 0x72, 0x61,
	0x67, 0x65, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0f, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x39, 0x5a, 0x37, 0x67, 0x6f, 0x2e, 0x6c, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x2e,
	0x69, 0x6f, 0x2f, 0x63, 0x6e, 0x2d, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2f, 0x76, 0x32, 0x2f, 0x6c,
	0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2f, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x61, 0x70, 0x69, 0x74, 0x72, 0x61, 0x63, 0x65, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_model_apitrace_apitrace_proto_rawDescOnce sync.Once
	file_model_apitrace_apitrace_proto_rawDescData = file_model_apitrace_apitrace_proto_rawDesc
)

func file_model_apitrace_apitrace_proto_rawDescGZIP() []byte {
	file_model_apitrace_apitrace_proto_rawDescOnce.Do(func() {
		file_model_apitrace_apitrace_proto_rawDescData = protoimpl.X.CompressGZIP(file_model_apitrace_apitrace_proto_rawDescData)
	})
	return file_model_apitrace_apitrace_proto_rawDescData
}

var file_model_apitrace_apitrace_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_model_apitrace_apitrace_proto_goTypes = []interface{}{
	(*Trace)(nil),            // 0: apitrace.Trace
	(*Trace_Entry)(nil),      // 1: apitrace.Trace.Entry
	(*Trace_EntryStats)(nil), // 2: apitrace.Trace.EntryStats
}
var file_model_apitrace_apitrace_proto_depIdxs = []int32{
	1, // 0: apitrace.Trace.traced_entries:type_name -> apitrace.Trace.Entry
	2, // 1: apitrace.Trace.entry_stats:type_name -> apitrace.Trace.EntryStats
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_model_apitrace_apitrace_proto_init() }
func file_model_apitrace_apitrace_proto_init() {
	if File_model_apitrace_apitrace_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_model_apitrace_apitrace_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Trace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_apitrace_apitrace_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Trace_Entry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_apitrace_apitrace_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Trace_EntryStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_model_apitrace_apitrace_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_model_apitrace_apitrace_proto_goTypes,
		DependencyIndexes: file_model_apitrace_apitrace_proto_depIdxs,
		MessageInfos:      file_model_apitrace_apitrace_proto_msgTypes,
	}.Build()
	File_model_apitrace_apitrace_proto = out.File
	file_model_apitrace_apitrace_proto_rawDesc = nil
	file_model_apitrace_apitrace_proto_goTypes = nil
	file_model_apitrace_apitrace_proto_depIdxs = nil
}
